# Copyright (c) 2021 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

kind: pipeline
name: license

steps:
  - name: check
    image: docker.io/library/golang:1.16
    pull: always
    commands:
      - go get -u github.com/google/addlicense
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .
---
kind: pipeline
name: policeman

depends_on:
  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'. On Kustomize is common to don't set them
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # We use a lot of copy paste in our code, is intended. So it important to don't use this linter
      VALIDATE_JSCPD: "false"
      VALIDATE_YAML: "false"
      VALIDATE_TERRAFORM_TFLINT: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/alertmanager-operated > alertmanager-operated.yml
      - kustomize build katalog/goldpinger > goldpinger.yml
      - kustomize build katalog/grafana > grafana.yml
      - kustomize build katalog/kube-proxy-metrics > kube-proxy-metrics.yml
      - kustomize build katalog/kube-state-metrics > kube-state-metrics.yml
      - kustomize build katalog/kubeadm-sm > kubeadm-sm.yml
      - kustomize build katalog/metrics-server > metrics-server.yml
      - kustomize build katalog/node-exporter > node-exporter.yml
      - kustomize build katalog/prometheus-operated > prometheus-operated.yml
      - kustomize build katalog/prometheus-operator > prometheus-operator.yml
      - kustomize build katalog/thanos/thanos > thanos.yml

  - &deprek8ion
    name: deprek8ion-alertmanager-operated
    image: eu.gcr.io/swade1987/deprek8ion:1.1.34
    pull: always
    environment:
      KUBERNETES_MANIFESTS: alertmanager-operated.yml
    depends_on:
      - render
    commands:
      - /conftest test -p /policies $${KUBERNETES_MANIFESTS}

  - <<: *deprek8ion
    name: deprek8ion-goldpinger
    environment:
      KUBERNETES_MANIFESTS: goldpinger.yml

  - <<: *deprek8ion
    name: deprek8ion-grafana
    environment:
      KUBERNETES_MANIFESTS: grafana.yml

  - <<: *deprek8ion
    name: deprek8ion-kube-proxy-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-proxy-metrics.yml

  - <<: *deprek8ion
    name: deprek8ion-kube-state-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-state-metrics.yml

  - <<: *deprek8ion
    name: deprek8ion-kubeadm-sm
    environment:
      KUBERNETES_MANIFESTS: kubeadm-sm.yml

  - <<: *deprek8ion
    name: deprek8ion-metrics-server
    environment:
      KUBERNETES_MANIFESTS: metrics-server.yml

  - <<: *deprek8ion
    name: deprek8ion-node-exporter
    environment:
      KUBERNETES_MANIFESTS: node-exporter.yml

  - <<: *deprek8ion
    name: deprek8ion-prometheus-operated
    environment:
      KUBERNETES_MANIFESTS: prometheus-operated.yml

  - <<: *deprek8ion
    name: deprek8ion-prometheus-operator
    environment:
      KUBERNETES_MANIFESTS: prometheus-operator.yml

  - <<: *deprek8ion
    name: deprek8ion-thanos
    environment:
      KUBERNETES_MANIFESTS: thanos.yml

---
kind: pipeline
name: check-prometheus-rules

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

steps:
  - name: prom-rules
    image: quay.io/sighup/prom-rules:3.11_v0.2.2_2.16.0_2.3.0
    pull: always
    depends_on: [clone]
    commands:
      - bash katalog/tests/promtool.sh
    when:
      event:
        - push
        - tag

---
kind: pipeline
name: render-examples

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

steps:
  - name: examples
    image: quay.io/sighup/furyctl-bats:v0.2.2_3.2.2
    pull: always
    depends_on: [clone]
    commands:
      - bats -t examples/tests.sh
    when:
      event:
        - tag

---
kind: pipeline
name: e2e-kubernetes-1.20

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

node:
  runner: internal

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/heads/1.23_upgrade
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-120
      cluster_version: '1.20.7'
      local_kind_config_path: katalog/tests/kind-config.yml
      pipeline_id: cluster-120
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [e2e]
    settings:
      action: destroy
      pipeline_id: cluster-120
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}
---
kind: pipeline
name: e2e-kubernetes-1.21

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

node:
  runner: internal

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/heads/1.23_upgrade
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-121
      cluster_version: '1.21.1'
      local_kind_config_path: katalog/tests/kind-config.yml
      pipeline_id: cluster-121
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.21.1_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [e2e]
    settings:
      action: destroy
      pipeline_id: cluster-121
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.22

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

node:
  runner: internal

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/heads/1.23_upgrade
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-122
      cluster_version: '1.22.0'
      local_kind_config_path: katalog/tests/kind-config.yml
      pipeline_id: cluster-122
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.22.0_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-122
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [e2e]
    settings:
      action: destroy
      pipeline_id: cluster-122
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.23

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

node:
  runner: internal

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/heads/1.23_upgrade
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-123
      cluster_version: '1.23.0'
      local_kind_config_path: katalog/tests/kind-config.yml
      pipeline_id: cluster-123
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.23.0_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-123
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [e2e]
    settings:
      action: destroy
      pipeline_id: cluster-123
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}

---
kind: pipeline
name: release

depends_on:
  - e2e-kubernetes-1.20
  - e2e-kubernetes-1.21
  - e2e-kubernetes-1.22
  - e2e-kubernetes-1.23

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [ clone ]
    commands:
      - tar -zcvf fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [ clone ]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
