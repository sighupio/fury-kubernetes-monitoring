# Copyright (c) 2022 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: license
kind: pipeline
type: docker

steps:
  - name: check
    image: docker.io/library/golang:1.16
    pull: always
    commands:
      - go get -u github.com/google/addlicense
      - addlicense -c "SIGHUP s.r.l" -v -l bsd -y "2017-present" --check .
---
name: policeman
kind: pipeline
type: docker

depends_on:
  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'. On Kustomize is common to don't set them
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # We use a lot of copy paste in our code, is intended. So it important to don't use this linter
      VALIDATE_JSCPD: "false"
      VALIDATE_TERRAFORM_TFLINT: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      VALIDATE_NATURAL_LANGUAGE: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.21.12_3.8.7_4.21.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/aks-sm > aks-sm.yml
      - kustomize build katalog/alertmanager-operated > alertmanager-operated.yml
      - kustomize build katalog/blackbox-exporter > blackbox-exporter.yml
      - kustomize build katalog/eks-sm > eks-sm.yml
      - kustomize build katalog/gke-sm > gke-sm.yml
      - kustomize build katalog/grafana > grafana.yml
      - kustomize build katalog/kube-proxy-metrics > kube-proxy-metrics.yml
      - kustomize build katalog/kube-state-metrics > kube-state-metrics.yml
      - kustomize build katalog/kubeadm-sm > kubeadm-sm.yml
      - kustomize build katalog/node-exporter > node-exporter.yml
      - kustomize build katalog/prometheus-adapter > prometheus-adapter.yml
      - kustomize build katalog/prometheus-operated > prometheus-operated.yml
      - kustomize build katalog/prometheus-operator > prometheus-operator.yml
      - kustomize build katalog/thanos/thanos-minio/single > thanos.yml
      - kustomize build katalog/x509-exporter > x509-exporter.yml

  - &check-deprecated-apis
    name: check-deprecated-apis-alertmanager-operated
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect $${KUBERNETES_MANIFESTS} --ignore-deprecations --target-versions=k8s=v1.25.0
    environment:
      KUBERNETES_MANIFESTS: alertmanager-operated.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-aks-sm
    environment:
      KUBERNETES_MANIFESTS: aks-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-blackbox-exporter
    environment:
      KUBERNETES_MANIFESTS: blackbox-exporter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-eks-sm
    environment:
      KUBERNETES_MANIFESTS: eks-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-gke-sm
    environment:
      KUBERNETES_MANIFESTS: gke-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-grafana
    environment:
      KUBERNETES_MANIFESTS: grafana.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kube-proxy-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-proxy-metrics.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kube-state-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-state-metrics.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kubeadm-sm
    environment:
      KUBERNETES_MANIFESTS: kubeadm-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-node-exporter
    environment:
      KUBERNETES_MANIFESTS: node-exporter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-adapter
    environment:
      KUBERNETES_MANIFESTS: prometheus-adapter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-operated
    environment:
      KUBERNETES_MANIFESTS: prometheus-operated.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-operator
    environment:
      KUBERNETES_MANIFESTS: prometheus-operator.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-thanos
    environment:
      KUBERNETES_MANIFESTS: thanos.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-x509-exporter
    environment:
      KUBERNETES_MANIFESTS: x509-exporter.yml

---
name: check-prometheus-rules
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

steps:
  - name: prom-rules
    image: quay.io/sighup/prom-rules:3.16_2.36.1_4.27.2
    pull: always
    depends_on: [clone]
    commands:
      - bash katalog/tests/promtool.sh
    when:
      event:
        - push
        - tag

# ---
# name: e2e-kubernetes-1.24
# kind: pipeline
# type: docker

# depends_on:
#   - policeman

# node:
#   runner: internal

# platform:
#   os: linux
#   arch: amd64

# trigger:
#   ref:
#     include:
#       - refs/heads/main
#       - refs/heads/release-v*
#       - refs/tags/**

# steps:
#   - name: init
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.24.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [clone]
#     settings:
#       action: custom-cluster-124
#       cluster_version: "1.24.0"
#       local_kind_config_path: katalog/tests/kind-config.yml
#       pipeline_id: cluster-124
#       instance_path: /shared
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password

#   - name: e2e
#     image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.0_3.8.7_4.21.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [init]
#     commands:
#       - export KUBECONFIG=/shared/kube/kubeconfig-124
#       - bats -t katalog/tests/tests.sh
#       - bats -t katalog/tests/grafana-ldap.sh

#   - name: destroy
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.24.1
#     pull: always
#     depends_on: [e2e]
#     settings:
#       action: destroy
#       pipeline_id: cluster-124
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password
#     when:
#       status:
#         - success
#         - failure

# volumes:
#   - name: shared
#     temp: {}
# ---
# name: e2e-kubernetes-1.25
# kind: pipeline
# type: docker

# depends_on:
#   - policeman

# node:
#   runner: internal

# platform:
#   os: linux
#   arch: amd64

# trigger:
#   ref:
#     include:
#       - refs/heads/main
#       - refs/heads/release-v*
#       - refs/tags/**

# steps:
#   - name: init
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.25.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [clone]
#     settings:
#       action: custom-cluster-125
#       cluster_version: "1.25.3"
#       local_kind_config_path: katalog/tests/kind-config.yml
#       pipeline_id: cluster-125
#       instance_path: /shared
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password

#   - name: e2e
#     # KUBECTL 1.25.3 - KUSTOMIZE 3.5.3 - HELM 3.1.1 - YQ 4.21.1 - ISTIOCTL 1.9.4 - FURYCTL 0.9.0 - BATS 1.1.0
#     image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [init]
#     commands:
#       - export KUBECONFIG=/shared/kube/kubeconfig-125
#       - bats -t katalog/tests/tests.sh
#       - bats -t katalog/tests/grafana-ldap.sh

#   - name: destroy
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.25.3
#     pull: always
#     depends_on: [e2e]
#     settings:
#       action: destroy
#       pipeline_id: cluster-125
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password
#     when:
#       status:
#         - success
#         - failure

# volumes:
#   - name: shared
#     temp: {}

---
name: e2e-kubernetes-1.26
kind: pipeline
type: docker

depends_on:
  - policeman

node:
  runner: internal

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/main
      - refs/heads/release-v*
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v1.26.3
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-126
      cluster_version: "1.26.3"
      local_kind_config_path: katalog/tests/kind-config.yml
      pipeline_id: cluster-126
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: debug
    # KUBECTL 1.26.3 - KUSTOMIZE 3.5.3 - HELM 3.1.1 - YQ 4.21.1 - ISTIOCTL 1.9.4 - FURYCTL 0.9.0 - BATS 1.1.0
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.1.1_1.9.4_1.26.3_3.5.3_4.33.3
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-126
      - kubectl get nodes
      - kubectl set image --namespace kube-system daemonset.apps/kindnet kindnet-cni=docker.io/kindest/kindnetd:v20230511-dc714da8
      - kubectl get pods -A
      - kubectl describe pod -n kube-system -l app=kindnet
      - kubectl get events --sort-by='.lastTimestamp' -A


  - name: e2e
    # KUBECTL 1.26.3 - KUSTOMIZE 3.5.3 - HELM 3.1.1 - YQ 4.21.1 - ISTIOCTL 1.9.4 - FURYCTL 0.9.0 - BATS 1.1.0
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.1.1_1.9.4_1.26.3_3.5.3_4.33.3
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-126
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v1.26.3
    pull: always
    depends_on: [e2e]
    settings:
      action: destroy
      pipeline_id: cluster-126
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}


---
name: release
kind: pipeline
type: docker

depends_on:
  # - e2e-kubernetes-1.24
  # - e2e-kubernetes-1.25
  - e2e-kubernetes-1.26

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: prepare-canonical-json
    image: registry.sighup.io/poc/fury-repo-automations:v0.0.3
    pull: always
    depends_on: [clone]
    commands:
      - spock module-json -m=fury-kubernetes-monitoring -r=False -v=${DRONE_TAG}
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-canonical-json
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
        - fury-kubernetes-logging-canonical-definition-${DRONE_TAG}.json
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-canonical-json
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
        - fury-kubernetes-logging-canonical-definition-${DRONE_TAG}.json
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
