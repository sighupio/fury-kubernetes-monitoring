# Copyright (c) 2022 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: license
kind: pipeline
type: docker

steps:
  - name: check
    image: docker.io/library/golang:1.20
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.1.1
      - addlicense -c "SIGHUP s.r.l" -v -l bsd -y "2017-present" --check .
---
name: policeman
kind: pipeline
type: docker

depends_on:
  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      FILTER_REGEX_EXCLUDE: (\.github)
      # Identifies false positives like missing 'selector'. On Kustomize is common to don't set them
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # We use a lot of copy paste in our code, is intended. So it important to don't use this linter
      VALIDATE_JSCPD: "false"
      VALIDATE_TERRAFORM_TFLINT: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      VALIDATE_NATURAL_LANGUAGE: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.21.12_3.8.7_4.21.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/aks-sm > aks-sm.yml
      - kustomize build katalog/alertmanager-operated > alertmanager-operated.yml
      - kustomize build katalog/blackbox-exporter > blackbox-exporter.yml
      - kustomize build katalog/eks-sm > eks-sm.yml
      - kustomize build katalog/gke-sm > gke-sm.yml
      - kustomize build katalog/grafana > grafana.yml
      - kustomize build katalog/kube-proxy-metrics > kube-proxy-metrics.yml
      - kustomize build katalog/kube-state-metrics > kube-state-metrics.yml
      - kustomize build katalog/kubeadm-sm > kubeadm-sm.yml
      - kustomize build katalog/node-exporter > node-exporter.yml
      - kustomize build katalog/prometheus-adapter > prometheus-adapter.yml
      - kustomize build katalog/prometheus-operated > prometheus-operated.yml
      - kustomize build katalog/prometheus-operator > prometheus-operator.yml
      - kustomize build katalog/thanos/thanos-minio/single > thanos.yml
      - kustomize build katalog/x509-exporter > x509-exporter.yml
      - kustomize build katalog/mimir > mimir.yml

  - &check-deprecated-apis
    name: check-deprecated-apis-alertmanager-operated
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect $${KUBERNETES_MANIFESTS} --ignore-deprecations --target-versions=k8s=v1.31.0
    environment:
      KUBERNETES_MANIFESTS: alertmanager-operated.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-aks-sm
    environment:
      KUBERNETES_MANIFESTS: aks-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-blackbox-exporter
    environment:
      KUBERNETES_MANIFESTS: blackbox-exporter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-eks-sm
    environment:
      KUBERNETES_MANIFESTS: eks-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-gke-sm
    environment:
      KUBERNETES_MANIFESTS: gke-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-grafana
    environment:
      KUBERNETES_MANIFESTS: grafana.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kube-proxy-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-proxy-metrics.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kube-state-metrics
    environment:
      KUBERNETES_MANIFESTS: kube-state-metrics.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-kubeadm-sm
    environment:
      KUBERNETES_MANIFESTS: kubeadm-sm.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-node-exporter
    environment:
      KUBERNETES_MANIFESTS: node-exporter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-adapter
    environment:
      KUBERNETES_MANIFESTS: prometheus-adapter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-operated
    environment:
      KUBERNETES_MANIFESTS: prometheus-operated.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-prometheus-operator
    environment:
      KUBERNETES_MANIFESTS: prometheus-operator.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-thanos
    environment:
      KUBERNETES_MANIFESTS: thanos.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-x509-exporter
    environment:
      KUBERNETES_MANIFESTS: x509-exporter.yml

  - <<: *check-deprecated-apis
    name: check-deprecated-apis-mimir
    environment:
      KUBERNETES_MANIFESTS: mimir.yml

---
name: check-prometheus-rules
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

steps:
  - name: prom-rules
    image: quay.io/sighup/prom-rules:3.16_2.54.1_4.27.2
    pull: always
    depends_on: [clone]
    commands:
      - bash katalog/tests/promtool.sh
    when:
      event:
        - push
        - tag

---
name: e2e-kubernetes-1.29
kind: pipeline
type: docker

clone:
  depth: 1

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.29.0
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-129
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-129
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config katalog/tests/kind-config.yml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e
    # KUBECTL 1.29.1 - KUSTOMIZE 3.5.3 - HELM 3.1.1 - YQ 4.21.1 - ISTIOCTL 1.9.4 - FURYCTL 0.9.0 - BATS 1.1.0
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.29.1_3.5.3_4.33.3
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-129
      KUBECONFIG: /drone/src/kubeconfig-129
    depends_on: [create-kind-cluster]
    commands:
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-129
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
name: e2e-kubernetes-1.30
kind: pipeline
type: docker

clone:
  depth: 1

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.30.5_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.30.4
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-130
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-130
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config katalog/tests/kind-config.yml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_1.30.5_3.10.0_4.33.3
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-130
      KUBECONFIG: /drone/src/kubeconfig-130
    depends_on: [create-kind-cluster]
    commands:
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.30.5_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-130
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
name: e2e-kubernetes-1.31
kind: pipeline
type: docker

clone:
  depth: 1

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.31.1_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.31.1
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-131
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-131
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config katalog/tests/kind-config.yml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_1.31.1_3.10.0_4.33.3
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-131
      KUBECONFIG: /drone/src/kubeconfig-131
    depends_on: [create-kind-cluster]
    commands:
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.24.0_1.31.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-131
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
name: e2e-kubernetes-1.32
kind: pipeline
type: docker

clone:
  depth: 1

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.27.0_1.32.2_5.6.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.31.1
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-132
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-132
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config katalog/tests/kind-config.yml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_1.32.2_5.6.0_4.33.3
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-132
      KUBECONFIG: /drone/src/kubeconfig-132
    depends_on: [create-kind-cluster]
    commands:
      - bats -t katalog/tests/tests.sh
      - bats -t katalog/tests/grafana-ldap.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.27.0_1.32.2_5.6.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-132
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
name: release
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.29
  - e2e-kubernetes-1.30
  - e2e-kubernetes-1.31
  - e2e-kubernetes-1.32
platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-monitoring-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
